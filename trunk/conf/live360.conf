# rtmp listen ports
listen              1935;
# the pid file path
pid                 ./objs/srs.pid;
# chunk size can impove performance about 10%, default is 128
chunk_size          60000;
max_connections     1000;
# wheather start as deamon, default on, not support reload.
daemon              off;
# log tank: file or console
srs_log_tank        file;
srs_log_file        ./objs/srs.log;

#############################################
# system statistics section.
#############################################
stats {
    network         0;
    disk            sda sdb xvda xvdb;
}

#############################################
# Http secitons
#############################################
# api of srs, external program to manage srs, such js client.
# [curl http://192.168.1.170:1985/api/v1/reload]
http_api {
    enabled         on;
    listen          1985;
    crossdomain     on;
}
# embeded http server in srs.
http_server {
    enabled         on;
    listen          8090;
    dir             ./objs/nginx/html;
}

##############################################
# RTMP/HTTP VHOST sections
##############################################
# Vhost list
# __defalutVhost__ is the default vhost
vhost __defaultVhost__ {
    gop_cache 		on;
    queue_length	10;
    min_latency		on;
    mr {
	    enabled		off;
    }
    mw_latency		100;
    tcp_nodelay		on;

    hls {
        enabled         on;
        hls_fragment    5;
        hls_window      30;
        hls_path        ./objs/nginx/html;
        hls_m3u8_file   [app]/[stream].m3u8;
        hls_ts_file     [app]/[stream]-[seq].ts;
    }
    
    dvr {
    	enabled		off;
	    dvr_path	./objs/nginx/html/[app]/[stream].flv;
        dvr_plan	append;
    }
   
    transcode {
        enabled		on;
        ffmpeg		./objs/ffmpeg/bin/ffmpeg;
        engine  HD {
            enabled		on;
            vcodec 		libx264;
            vthreads	4;
            vprofile	main;
            vpreset 	medium;
            acodec		libfdk_acc;
            output		rtmp://127.0.0.1:[port]/[app]?vhost=[vhost]/[stream]_[engine];
        }
    }
}

# security vhost
vhost security {
    security {
        enabled     on;
        allow       play        all;
        allow       publish     all;
    }
}

# RTMP Only vhost
vhost rtmp {
    min_latency     on;
    mw_latency      100;
    gop_cache       off;
    queue_length    10;
    tcp_nodelay     on;
    mr {
        enabled     off;
    }
}

# RTMP + HLS vhost
vhost hls {
    gop_cache 		off;
    queue_length	10;
    min_latency		on;
    mw_latency		100;
    tcp_nodelay		on;
    mr {
	    enabled		off;
    }
    hls {
        enabled         on;
        # the hls fragment in seconds, the duration of a piece of ts.
        hls_fragment    5;
        # the hls window in seconds, the number of ts in m3u8.
        hls_window      30;
        hls_path        ./objs/nginx/html;
        hls_m3u8_file   [app]/[stream].m3u8;
        hls_ts_file     [app]/[stream]-[seq].ts;
        # whether cleanup the old expired ts files.
        hls_cleanup     on;
        # the timeout in seconds to dispose the hls(remove all m3u8 and ts), 0 is disable
        hls_dispose     0;
    }
}

# RTMP + DVR vhost
vhost dvr {
    gop_cache 		off;
    queue_length	10;
    min_latency		on;
    mw_latency		100;
    tcp_nodelay		on;
    mr {
	    enabled		off;
    }
    dvr {
    	enabled		on;
	    dvr_path	./objs/nginx/html/[app]/[stream].flv;
        dvr_plan	session;
    }
}

# RTMP + TRANSFORM vhost
vhost transform {
    gop_cache 		off;
    queue_length	10;
    min_latency		on;
    mw_latency		100;
    tcp_nodelay		on;
    mr {
	    enabled		off;
    }
    transcode {
        enabled		on;
        ffmpeg		./objs/ffmpeg/bin/ffmpeg;
        engine  HD {
            enabled		on;
            vcodec 		libx264;
            vthreads	4;
            vprofile	main;
            vpreset 	medium;
            acodec		libfdk_acc;
            output		rtmp://127.0.0.1:[port]/[app]?vhost=[vhost]/[stream]_[engine];
        }
    }
}

# RTMP + HLS + DVR
vhost hls.dvr {
    gop_cache 		off;
    queue_length	10;
    min_latency		on;
    mr {
	    enabled		off;
    }
    mw_latency		100;
    tcp_nodelay		on;

    dvr {
    	enabled		on;
	    dvr_path	./objs/nginx/html/[app]/[stream].flv;
        dvr_plan	session;
    }
    hls {
        enabled         on;
        hls_fragment    5;
        hls_window      30;
        hls_path        ./objs/nginx/html;
        hls_m3u8_file   [app]/[stream].m3u8;
        hls_ts_file     [app]/[stream]-[seq].ts;
        hls_cleanup     on;
        hls_dispose     0;
    }
}

# RTMP + HLS + TRANSFORM
vhost hls.transform {
    gop_cache 		off;
    queue_length	10;
    min_latency		on;
    mw_latency		100;
    tcp_nodelay		on;
    mr {
	    enabled		off;
    }
    hls {
        enabled         on;
        hls_fragment    5;
        hls_window      30;
        hls_path        ./objs/nginx/html;
        hls_m3u8_file   [app]/[stream].m3u8;
        hls_ts_file     [app]/[stream]-[seq].ts;
        hls_cleanup     on;
        hls_dispose     0;
    }
    transcode {
        enabled		on;
        ffmpeg		./objs/ffmpeg/bin/ffmpeg;
        engine  HD {
            enabled		on;
            vcodec 		libx264;
            vthreads	4;
            vprofile	main;
            vpreset 	medium;
            acodec		libfdk_acc;
            output		rtmp://127.0.0.1:[port]/[app]?vhost=[vhost]/[stream]_[engine];
        }
    }
}

# RTMP + DVR + TRANSFORM
vhost dvr.transform {
    gop_cache 		off;
    queue_length	10;
    min_latency		on;
    mw_latency		100;
    tcp_nodelay		on;
    mr {
	    enabled		off;
    }
    dvr {
    	enabled		on;
	    dvr_path	./objs/nginx/html/[app]/[stream].flv;
        dvr_plan	session;
    }
    transcode {
        enabled		on;
        ffmpeg		./objs/ffmpeg/bin/ffmpeg;
        engine  HD {
            enabled		on;
            vcodec 		libx264;
            vthreads	4;
            vprofile	main;
            vpreset 	medium;
            acodec		libfdk_acc;
            output		rtmp://127.0.0.1:[port]/[app]?vhost=[vhost]/[stream]_[engine];
        }
    }
}

